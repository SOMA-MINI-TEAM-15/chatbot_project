import { IMentoring, ISchedule } from '../interfaces/soma.interface';

export const broadcastMessage = (conversationId: number) => {
  return {
    conversationId,
    text: 'Ï†ÄÏñ¥Ìù¨Îäî ÌÅ¨Î°§ÎßÅÏùÑ ÌïòÍ≤†ÏäµÎãàÎã§. Í±∞Í∏∞Ïóê ÏÜåÎßàÎ•º Í≥ÅÎì§Ïù∏',
    blocks: [
      {
        type: 'header', // Ìó§ÎçîÎäî typeÏùÑ headerÎ°ú Í≥†Ï†ï
        text: 'ÎØ∏Îãà ÌîÑÎ°úÏ†ùÌä∏ 15ÌåÄ',
        style: 'yellow', // blue, yello, red ÌÉù 1
      },
      {
        type: 'text',
        text:
          'Ï†ÄÌù¨ 15ÌåÄÏùÄ ÏÜåÎßàÎ•º ÏßÑÌñâÌïòÎ©¥ÏÑú ÏûêÏú†Î©òÌÜ†ÎßÅÏóê Ïñ¥Î†§ÏõÄÏùÑ Í≤™ÏùÄ Ïó¨Îü¨Î∂ÑÏùÑ ÏúÑÌï¥ ÏÜîÎ£®ÏÖòÏùÑ Ï†úÍ≥µÌïòÎ†§ Ìï©ÎãàÎã§!\nÎØ∏Îãà ÌîÑÎ°úÏ†ùÌä∏ ÌèâÍ∞ÄÍ∞Ä ÎÅùÎÇòÎçîÎùºÎèÑ Í≥ÑÏÜç ÏÇ¨Ïö©Ìï† Ïàò ÏûàÎäî Ï±óÎ¥áÏù¥Îãà ÎßéÏù¥ ÏÇ¨Ïö©Ìï¥Ï£ºÏÑ∏Ïöî :)',
        markdown: true,
      },
      {
        type: 'button',
        action_type: 'call_modal',
        value: 'user_search',
        text: 'Î©òÌã∞/Î©òÌÜ† Í≤ÄÏÉâ',
        style: 'primary',
      },
      {
        type: 'button',
        action_type: 'call_modal',
        value: 'mentoring_search',
        text: 'Î©òÌÜ†ÎßÅ Í≤ÄÏÉâ',
        style: 'primary',
      },
      {
        type: 'button',
        action_type: 'call_modal',
        value: 'calendar',
        text: 'ÏùºÏ†ï ÌôïÏù∏',
        style: 'primary',
      },
      {
        type: 'button',
        action_type: 'call_modal',
        value: 'noti_on_off',
        text: 'Ïã†Í∑ú Î©òÌÜ†ÎßÅ ÏïåÎ¶º ÏºúÍ≥† ÎÅÑÍ∏∞',
        style: 'primary',
      },
    ],
  };
};

export const userSearchRequestModal = () => {
  return {
    view: {
      title: 'Î©òÌã∞/Î©òÌÜ† Í≤ÄÏÉâ',
      accept: 'Í≤ÄÏÉâÌïòÍ∏∞',
      decline: 'Ï∑®ÏÜå',
      value: 'user_search',
      blocks: [
        {
          type: 'label',
          text: 'Î©òÌã∞ÏôÄ Î©òÌÜ† Ï§ë ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî.',
          markdown: false,
        },
        {
          type: 'select',
          name: 'type',
          required: true,
          options: [
            {
              text: 'Î©òÌã∞',
              value: 'mentee',
            },
            {
              text: 'Î©òÌÜ†',
              value: 'mento',
            },
          ],
          placeholder: 'ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî.',
        },
        {
          type: 'label',
          text: 'Ïù¥Î¶ÑÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.',
          markdown: false,
        },
        {
          type: 'input',
          name: 'value',
          required: false,
          placeholder: 'ex) ÌôçÍ∏∏Îèô',
        },
      ],
    },
  };
};

export const userSearchResultModal = (name: string, skills: string) => {
  return {
    text: 'Î©òÌã∞ Í≤ÄÏÉâ',
    blocks: [
      {
        type: 'header',
        text: 'üîé Î©òÌã∞ Í≤ÄÏÉâ Í≤∞Í≥º',
        style: 'blue',
      },
      {
        type: 'description',
        term: 'Ïù¥Î¶Ñ',
        content: {
          type: 'text',
          text: name,
          markdown: false,
        },
        accent: true,
      },
      {
        type: 'description',
        term: 'Í¥ÄÏã¨Í∏∞Ïà†',
        content: {
          type: 'text',
          text: skills,
          markdown: false,
        },
        accent: true,
      },
      {
        type: 'button',
        text: 'ÏûêÏÑ∏Ìûà Î≥¥Í∏∞',
        style: 'default',
      },
    ],
  };
};

export const mentoringSearchRequestModal = () => {
  return {
    view: {
      title: 'Î©òÌÜ†ÎßÅ Í≤ÄÏÉâ',
      accept: 'Í≤ÄÏÉâÌïòÍ∏∞',
      decline: 'Ï∑®ÏÜå',
      value: 'mentoring_search',
      blocks: [
        {
          type: 'label',
          text: 'Í≤ÄÏÉâ Î∂ÑÎ•òÎ•º ÏïåÎ†§Ï£ºÏÑ∏Ïöî.',
          markdown: false,
        },
        {
          type: 'select',
          name: 'type',
          required: true,
          options: [
            {
              text: 'Ï†úÎ™©',
              value: 'title',
            },
            {
              text: 'ÏûëÏÑ±Ïûê',
              value: 'writer',
            },
            {
              text: 'ÎÇ¥Ïö©',
              value: 'content',
            },
          ],
          placeholder: 'Í≤ÄÏÉâ Î∂ÑÎ•ò',
        },
        {
          type: 'label',
          text: 'ÎÇ¥Ïö©ÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.',
          markdown: false,
        },
        {
          type: 'input',
          name: 'value',
          required: false,
          placeholder: 'ex) Î®∏Ïã†Îü¨Îãù',
        },
      ],
    },
  };
};

export const mentoringSearchResultModal = (mentoringInfo: IMentoring) => {
  return {
    text: 'Î©òÌÜ†ÎßÅ Í≤ÄÏÉâ Í≤∞Í≥º',
    blocks: [
      {
        type: 'header',
        text: 'üîé Î©òÌÜ†ÎßÅ Í≤ÄÏÉâ Í≤∞Í≥º',
        style: 'blue',
      },
      {
        type: 'description',
        term: 'Ï†úÎ™©',
        content: {
          type: 'text',
          text: mentoringInfo.title,
          markdown: false,
        },
        accent: true,
      },
      {
        type: 'description',
        term: 'ÏûëÏÑ±Ïûê',
        content: {
          type: 'text',
          text: mentoringInfo.writer,
          markdown: false,
        },
        accent: true,
      },
      {
        type: 'description',
        term: 'Ï†ëÏàòÍ∏∞Í∞Ñ',
        content: {
          type: 'text',
          text: `${mentoringInfo.applyStartDate} ~ ${mentoringInfo.applyEndDate}`,
          markdown: false,
        },
        accent: true,
      },
      {
        type: 'description',
        term: 'ÏÉÅÌÉú',
        content: {
          type: 'text',
          text: mentoringInfo.state,
          markdown: false,
        },
        accent: true,
      },
      {
        type: 'description',
        term: 'Ï†ëÏàòÏù∏Ïõê',
        content: {
          type: 'text',
          text: mentoringInfo.appliedCnt,
          markdown: false,
        },
        accent: true,
      },
      // {
      //   type: 'button',
      //   text: 'ÏûêÏÑ∏Ìûà Î≥¥Í∏∞',
      //   style: 'default',
      // },
    ],
  };
};

export const calendarRequestModal = () => {
  return {
    view: {
      title: 'ÏùºÏ†ï ÌôïÏù∏',
      accept: 'Í≤ÄÏÉâÌïòÍ∏∞',
      decline: 'Ï∑®ÏÜå',
      value: 'calendar',
      blocks: [
        {
          type: 'label',
          text: 'Î™á ÏõîÏùò ÏùºÏ†ïÏùÑ ÌôïÏù∏Ìï†ÍπåÏöî?',
          markdown: false,
        },
        {
          type: 'select',
          name: 'type',
          required: true,
          options: [
            {
              text: '4Ïõî',
              value: 4,
            },
            {
              text: '5Ïõî',
              value: 5,
            },
            {
              text: '6Ïõî',
              value: 6,
            },
            {
              text: '7Ïõî',
              value: 7,
            },
            {
              text: '8Ïõî',
              value: 8,
            },
            {
              text: '9Ïõî',
              value: 9,
            },
            {
              text: '10Ïõî',
              value: 10,
            },
            {
              text: '11Ïõî',
              value: 11,
            },
            {
              text: '12Ïõî',
              value: 12,
            },
          ],
          placeholder: 'ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî.',
        },

      ],
    },
  };
};

export const calendarResultModal = (month: number, schedules: ISchedule[]) => {
  const output = {
    text: 'ÏõîÍ∞Ñ ÏùºÏ†ï',
    blocks: [],
  };

  if (!schedules) {
    return output;
  }

  for (const schedule of schedules) {
    output.blocks.push(
      {
        type: 'description',
        term: 'Ï†úÎ™©',
        content: {
          type: 'text',
          text: schedule.title,
          markdown: false,
        },
        accent: true,
      },
      {
        type: 'description',
        term: 'ÏùºÏ†ï',
        content: {
          type: 'text',
          text: `${schedule.startDate} ~ ${schedule.endDate}`,
          markdown: false,
        },
        accent: true,
      },
      {
        type: 'description',
        term: 'Íµ¨Î∂Ñ',
        content: {
          type: 'text',
          text: schedule.classification,
          markdown: false,
        },
        accent: true,
      },
      {
        type: 'divider',
      },
    );
  }

  return output;
};
